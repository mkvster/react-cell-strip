require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var React = require('react');
var ReactDOM = require('react-dom');
var CellStrip = require('react-cell-strip').CellStrip;

var App = React.createClass({
  displayName: 'App',

  getInitialState: function getInitialState() {
    return {
      selectedItem: null
    };
  },
  clickHandler: function clickHandler(context, item) {
    this.setState({
      selectedItem: item
    });
  },
  getIsSelected: function getIsSelected(context, item) {
    return this.state.selectedItem === item;
  },
  render: function render() {
    var context = {
      cellStripOwner: this
    };
    return React.createElement(
      'div',
      null,
      React.createElement(
        'div',
        { style: { width: "400px", height: "350px" } },
        React.createElement(CellStrip, {
          context: context,
          cellWidth: 100, cellHeight: 25,
          cellNumbers: [61, 62, 63, 64] }),
        React.createElement(CellStrip, { className: "cell-strip-fancy",
          context: context,
          cellWidth: [50, 120, 150, 80],
          cellHeight: [80, [30, 50], 80, [25, 25, 30]],
          cellNumbers: [1, [2, 3], 4, [5, 6, 7]] }),
        React.createElement(CellStrip, {
          context: context,
          cellWidth: [100, 50, 100, 150], cellHeight: 25,
          cellNumbers: [8, 9, 10, 11] }),
        React.createElement(CellStrip, {
          context: context,
          cellWidth: 200,
          cellHeight: [50, [25, 25]],
          cellNumbers: [12, [13, 14]] }),
        React.createElement(CellStrip, { className: "cell-strip-modern",
          context: context,
          cellWidth: [80, 100, 150, 70],
          cellHeight: [[30, 30, 20], 80, [40, 40], 80],
          cellNumbers: [[70, 65, 60], 55, [50, 45], 40] }),
        React.createElement(CellStrip, { className: "cell-strip-fancy",
          context: context,
          cellWidth: 100, cellHeight: 25,
          cellNumbers: [110, 116, 525, 41] }),
        React.createElement(CellStrip, { className: "cell-strip-dark",
          cellWidth: [180, 50, 100], cellHeight: 40,
          cellNumbers: ['Non-selectable', 'In', 'Out'] }),
        React.createElement(CellStrip, {
          context: context,
          cellWidth: [30, 40], cellHeight: [40, [20, 20]],
          cellNumbers: [15, [16, 17]] })
      ),
      React.createElement(
        'div',
        { className: 'indicator',
          style: { width: "380px", height: "60px" } },
        React.createElement(
          'h1',
          null,
          'Selected Cell: ',
          this.state.selectedItem
        )
      )
    );
  }
});

ReactDOM.render(React.createElement(App, null), document.getElementById('app'));

},{"react":undefined,"react-cell-strip":undefined,"react-dom":undefined}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJDOi9LL19EZXYvR2l0L3JlYWN0LWNlbGwtc3RyaXAvZXhhbXBsZS9zcmMvZXhhbXBsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUEsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdCLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNwQyxJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxTQUFTLENBQUM7O0FBRXRELElBQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUM7OztBQUMxQixpQkFBZSxFQUFBLDJCQUFHO0FBQ2QsV0FBTztBQUNILGtCQUFZLEVBQUUsSUFBSTtLQUNyQixDQUFDO0dBQ0w7QUFDRCxjQUFZLEVBQUEsc0JBQUMsT0FBTyxFQUFFLElBQUksRUFBRTtBQUN4QixRQUFJLENBQUMsUUFBUSxDQUFDO0FBQ1Ysa0JBQVksRUFBRSxJQUFJO0tBQ3JCLENBQUMsQ0FBQztHQUNOO0FBQ0QsZUFBYSxFQUFBLHVCQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUU7QUFDekIsV0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksS0FBSyxJQUFJLENBQUM7R0FDM0M7QUFDRCxRQUFNLEVBQUMsa0JBQUc7QUFDUixRQUFJLE9BQU8sR0FBRztBQUNaLG9CQUFjLEVBQUUsSUFBSTtLQUNyQixDQUFDO0FBQ0YsV0FDRTs7O01BQ0U7O1VBQUssS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFDLEFBQUM7UUFDNUMsb0JBQUMsU0FBUztBQUNSLGlCQUFPLEVBQUUsT0FBTyxBQUFDO0FBQ2pCLG1CQUFTLEVBQUUsR0FBRyxBQUFDLEVBQUMsVUFBVSxFQUFFLEVBQUUsQUFBQztBQUMvQixxQkFBVyxFQUFFLENBQUMsRUFBRSxF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RUFBRSxDQUFDLENBQUMsQUFBQyxHQUFHO09BQzNCO01BQ047O1VBQUssU0FBUyxFQUFDLFdBQVc7QUFDeEIsZUFBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFDLEFBQUM7UUFDeEM7Ozs7VUFBb0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZO1NBQU07T0FDN0M7S0FDRixDQUNOO0dBQ0g7Q0FDRixDQUFDLENBQUM7O0FBRUgsUUFBUSxDQUFDLE1BQU0sQ0FBQyxvQkFBQyxHQUFHLE9BQUcsRUFBRSxRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwidmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBSZWFjdERPTSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xudmFyIENlbGxTdHJpcCA9IHJlcXVpcmUoJ3JlYWN0LWNlbGwtc3RyaXAnKS5DZWxsU3RyaXA7XG5cbnZhciBBcHAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGdldEluaXRpYWxTdGF0ZSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICAgc2VsZWN0ZWRJdGVtOiBudWxsXG4gICAgICB9O1xuICB9LFxuICBjbGlja0hhbmRsZXIoY29udGV4dCwgaXRlbSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2VsZWN0ZWRJdGVtOiBpdGVtXG4gICAgICB9KTtcbiAgfSxcbiAgZ2V0SXNTZWxlY3RlZChjb250ZXh0LCBpdGVtKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW0gPT09IGl0ZW07XG4gIH0sXG4gIHJlbmRlciAoKSB7XG4gICAgdmFyIGNvbnRleHQgPSB7XG4gICAgICBjZWxsU3RyaXBPd25lcjogdGhpc1xuICAgIH07XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgc3R5bGU9e3t3aWR0aDogXCI0MDBweFwiLCBoZWlnaHQ6IFwiMzUwcHhcIn19PlxuICAgICAgICAgIDxDZWxsU3RyaXBcbiAgICAgICAgICAgIGNvbnRleHQ9e2NvbnRleHR9XG4gICAgICAgICAgICBjZWxsV2lkdGg9ezEwMH0gY2VsbEhlaWdodD17MjV9XG4gICAgICAgICAgICBjZWxsTnVtYmVycz17WzYxLCA2MiwgNjMsIDY0XX0gLz5cbiAgICAgICAgICA8Q2VsbFN0cmlwIGNsYXNzTmFtZT17XCJjZWxsLXN0cmlwLWZhbmN5XCJ9XG4gICAgICAgICAgICBjb250ZXh0PXtjb250ZXh0fVxuICAgICAgICAgICAgY2VsbFdpZHRoPXtbNTAsIDEyMCwgMTUwLCA4MF19XG4gICAgICAgICAgICBjZWxsSGVpZ2h0PXtbODAsIFszMCwgNTBdLCA4MCwgWzI1LDI1LDMwXV19XG4gICAgICAgICAgICBjZWxsTnVtYmVycz17WzEsIFsyLCAzXSwgNCwgWzUsIDYsIDddXX0gLz5cbiAgICAgICAgICA8Q2VsbFN0cmlwXG4gICAgICAgICAgICBjb250ZXh0PXtjb250ZXh0fVxuICAgICAgICAgICAgY2VsbFdpZHRoPXtbMTAwLCA1MCwgMTAwLCAxNTBdfSBjZWxsSGVpZ2h0PXsyNX1cbiAgICAgICAgICAgIGNlbGxOdW1iZXJzPXtbOCwgOSwgMTAsIDExXX0gLz5cbiAgICAgICAgICA8Q2VsbFN0cmlwXG4gICAgICAgICAgICBjb250ZXh0PXtjb250ZXh0fVxuICAgICAgICAgICAgY2VsbFdpZHRoPXsyMDB9XG4gICAgICAgICAgICBjZWxsSGVpZ2h0PXtbNTAsIFsyNSwyNV1dfVxuICAgICAgICAgICAgY2VsbE51bWJlcnM9e1sxMiwgWzEzLCAxNF1dfSAvPlxuICAgICAgICAgIDxDZWxsU3RyaXAgY2xhc3NOYW1lPXtcImNlbGwtc3RyaXAtbW9kZXJuXCJ9XG4gICAgICAgICAgICBjb250ZXh0PXtjb250ZXh0fVxuICAgICAgICAgICAgY2VsbFdpZHRoPXtbODAsIDEwMCwgMTUwLCA3MF19XG4gICAgICAgICAgICBjZWxsSGVpZ2h0PXtbWzMwLCAzMCwgMjBdLCA4MCwgWzQwLDQwXSwgODBdfVxuICAgICAgICAgICAgY2VsbE51bWJlcnM9e1tbNzAsIDY1LCA2MF0sIDU1LCBbNTAsIDQ1XSwgNDBdfSAvPlxuICAgICAgICAgIDxDZWxsU3RyaXAgY2xhc3NOYW1lPXtcImNlbGwtc3RyaXAtZmFuY3lcIn1cbiAgICAgICAgICAgIGNvbnRleHQ9e2NvbnRleHR9XG4gICAgICAgICAgICBjZWxsV2lkdGg9ezEwMH0gY2VsbEhlaWdodD17MjV9XG4gICAgICAgICAgICBjZWxsTnVtYmVycz17WzExMCwgMTE2LCA1MjUsIDQxXX0gLz5cbiAgICAgICAgICA8Q2VsbFN0cmlwIGNsYXNzTmFtZT17XCJjZWxsLXN0cmlwLWRhcmtcIn1cbiAgICAgICAgICAgIGNlbGxXaWR0aD17WzE4MCwgNTAsIDEwMF19IGNlbGxIZWlnaHQ9ezQwfVxuICAgICAgICAgICAgY2VsbE51bWJlcnM9e1snTm9uLXNlbGVjdGFibGUnLCAnSW4nLCAnT3V0J119IC8+XG4gICAgICAgICAgPENlbGxTdHJpcFxuICAgICAgICAgICAgY29udGV4dD17Y29udGV4dH1cbiAgICAgICAgICAgIGNlbGxXaWR0aD17WzMwLCA0MF19IGNlbGxIZWlnaHQ9e1s0MCwgWzIwLCAyMF1dfVxuICAgICAgICAgICAgY2VsbE51bWJlcnM9e1sxNSxbMTYsMTddXX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5kaWNhdG9yXCJcbiAgICAgICAgICBzdHlsZT17e3dpZHRoOiBcIjM4MHB4XCIsIGhlaWdodDogXCI2MHB4XCJ9fT5cbiAgICAgICAgICA8aDE+U2VsZWN0ZWQgQ2VsbDoge3RoaXMuc3RhdGUuc2VsZWN0ZWRJdGVtfTwvaDE+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG5cblJlYWN0RE9NLnJlbmRlcig8QXBwIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykpO1xuIl19
