require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var React = require('react');
var ReactDOM = require('react-dom');
var CellStrip = require('react-cell-strip');

var PlainCell = function PlainCell(cellAreaClassName, cellNumberClassName) {
  return React.createClass({
    render: function render() {
      return React.createElement(
        'div',
        { className: cellAreaClassName,
          style: { width: this.props.width + "px",
            height: this.props.height + "px" } },
        React.createElement(
          'div',
          { className: cellNumberClassName },
          this.props.cellNumber
        )
      );
    }
  });
};

var CellStripSimple = CellStrip(PlainCell("cell-area", ""));
var CellStripFancy = CellStrip(PlainCell("cell-area-fancy", "cell-number-fancy"));
var CellStripModern = CellStrip(PlainCell("cell-area-modern", "cell-number-modern"));
var CellStripDark = CellStrip(PlainCell("cell-area-dark", "cell-number-dark"));

var App = React.createClass({
  displayName: 'App',

  render: function render() {
    return React.createElement(
      'div',
      { style: { width: 400 + "px", height: 1200 + "px" } },
      React.createElement(CellStripSimple, { cellWidth: 100, cellHeight: 25,
        cellNumbers: [61, 62, 63, 64] }),
      React.createElement(CellStripFancy, { cellWidth: [50, 120, 150, 80],
        cellHeight: [80, [30, 50], 80, [25, 25, 30]],
        cellNumbers: [1, [2, 3], 4, [5, 6, 7]] }),
      React.createElement(CellStripSimple, { cellWidth: [100, 50, 100, 150], cellHeight: 25,
        cellNumbers: [8, 9, 10, 11] }),
      React.createElement(CellStripSimple, { cellWidth: 200,
        cellHeight: [50, [25, 25]],
        cellNumbers: [12, [13, 14]] }),
      React.createElement(CellStripModern, { cellWidth: [80, 100, 150, 70],
        cellHeight: [[30, 30, 20], 80, [40, 40], 80],
        cellNumbers: [[70, 65, 60], 55, [50, 45], 40] }),
      React.createElement(CellStripFancy, { cellWidth: 100, cellHeight: 25,
        cellNumbers: [110, 116, 525, 41] }),
      React.createElement(CellStripDark, { cellWidth: [180, 50, 100], cellHeight: 40,
        cellNumbers: ['Broken', 'In', 'Out'] }),
      React.createElement(CellStripSimple, { cellWidth: [30, 40], cellHeight: [40, [20, 20]],
        cellNumbers: [15, [16, 17]] })
    );
  }
});

ReactDOM.render(React.createElement(App, null), document.getElementById('app'));

},{"react":undefined,"react-cell-strip":undefined,"react-dom":undefined}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJDOi9LL19EZXYvR2l0L3JlYWN0LWNlbGwtc3RyaXAvZXhhbXBsZS9zcmMvZXhhbXBsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUEsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdCLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNwQyxJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQzs7QUFFNUMsSUFBSSxTQUFTLEdBQUcsU0FBWixTQUFTLENBQVksaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUU7QUFDN0QsU0FBTyxLQUFLLENBQUMsV0FBVyxDQUFDO0FBQ3JCLFVBQU0sRUFBRSxrQkFBVztBQUNmLGFBQ0k7O1VBQUssU0FBUyxFQUFFLGlCQUFpQixBQUFDO0FBQzlCLGVBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJO0FBQ3BDLGtCQUFNLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxFQUFDLEFBQUM7UUFDcEM7O1lBQUssU0FBUyxFQUFFLG1CQUFtQixBQUFDO1VBQ2pDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVTtTQUNsQjtPQUNKLENBQ1I7S0FDTDtHQUNKLENBQUMsQ0FBQztDQUNOLENBQUM7O0FBRUYsSUFBSSxlQUFlLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM1RCxJQUFJLGNBQWMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLGlCQUFpQixFQUFFLG1CQUFtQixDQUFDLENBQUMsQ0FBQztBQUNsRixJQUFJLGVBQWUsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLGtCQUFrQixFQUFFLG9CQUFvQixDQUFDLENBQUMsQ0FB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QUFBQztBQUMvRCxtQkFBVyxFQUFFLENBQUMsRUFBRSxFQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDLEFBQUMsR0FBRztLQUMzQixDQUNOO0dBQ0g7Q0FDRixDQUFDLENBQUM7O0FBRUgsUUFBUSxDQUFDLE1BQU0sQ0FBQyxvQkFBQyxHQUFHLE9BQUcsRUFBRSxRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwidmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBSZWFjdERPTSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xudmFyIENlbGxTdHJpcCA9IHJlcXVpcmUoJ3JlYWN0LWNlbGwtc3RyaXAnKTtcblxudmFyIFBsYWluQ2VsbCA9IGZ1bmN0aW9uKGNlbGxBcmVhQ2xhc3NOYW1lLCBjZWxsTnVtYmVyQ2xhc3NOYW1lKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NlbGxBcmVhQ2xhc3NOYW1lfVxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17e3dpZHRoOiB0aGlzLnByb3BzLndpZHRoICsgXCJweFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogdGhpcy5wcm9wcy5oZWlnaHQgKyBcInB4XCJ9fT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NlbGxOdW1iZXJDbGFzc05hbWV9PlxuICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNlbGxOdW1iZXJ9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcblxudmFyIENlbGxTdHJpcFNpbXBsZSA9IENlbGxTdHJpcChQbGFpbkNlbGwoXCJjZWxsLWFyZWFcIiwgXCJcIikpO1xudmFyIENlbGxTdHJpcEZhbmN5ID0gQ2VsbFN0cmlwKFBsYWluQ2VsbChcImNlbGwtYXJlYS1mYW5jeVwiLCBcImNlbGwtbnVtYmVyLWZhbmN5XCIpKTtcbnZhciBDZWxsU3RyaXBNb2Rlcm4gPSBDZWxsU3RyaXAoUGxhaW5DZWxsKFwiY2VsbC1hcmVhLW1vZGVyblwiLCBcImNlbGwtbnVtYmVyLW1vZGVyblwiKSk7XG52YXIgQ2VsbFN0cmlwRGFyayA9IENlbGxTdHJpcChQbGFpbkNlbGwoXCJjZWxsLWFyZWEtZGFya1wiLCBcImNlbGwtbnVtYmVyLWRhcmtcIikpO1xuXG52YXIgQXBwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICByZW5kZXIgKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXt7d2lkdGg6IDQwMCArIFwicHhcIiwgaGVpZ2h0OiAxMjAwICtcInB4XCJ9fT5cbiAgICAgICAgPENlbGxTdHJpcFNpbXBsZSBjZWxsV2lkdGg9ezEwMH0gY2VsbEhlaWdodD17MjV9XG4gICAgICAgICAgY2VsbE51bWJlcnM9e1s2MSwgNjIsIDYzLCA2NF19IC8+XG4gICAgICAgIDxDZWxsU3RyaXBGYW5jeSBjZWxsV2lkdGg9e1s1MCwgMTIwLCAxNTAsIDgwXX1cbiAgICAgICAgICBjZWxsSGVpZ2h0PXtbODAsIFszMCwgNTBdLCA4MCwgWzI1LDI1LDMwXV19XG4gICAgICAgICAgY2VsbE51bWJlcnM9e1sxLCBbMiwgM10sIDQsIFs1LCA2LCA3XV19IC8+XG4gICAgICAgIDxDZWxsU3RyaXBTaW1wbGUgY2VsbFdpZHRoPXtbMTAwLCA1MCwgMTAwLCAxNTBdfSBjZWxsSGVpZ2h0PXsyNX1cbiAgICAgICAgICBjZWxsTnVtYmVycz17WzgsIDksIDEwLCAxMV19IC8+XG4gICAgICAgIDxDZWxsU3RyaXBTaW1wbGUgY2VsbFdpZHRoPXsyMDB9XG4gICAgICAgICAgY2VsbEhlaWdodD17WzUwLCBbMjUsMjVdXX1cbiAgICAgICAgICBjZWxsTnVtYmVycz17WzEyLCBbMTMsIDE0XV19IC8+XG4gICAgICAgIDxDZWxsU3RyaXBNb2Rlcm4gY2VsbFdpZHRoPXtbODAsIDEwMCwgMTUwLCA3MF19XG4gICAgICAgICAgY2VsbEhlaWdodD17W1szMCwgMzAsIDIwXSwgODAsIFs0MCw0MF0sIDgwXX1cbiAgICAgICAgICBjZWxsTnVtYmVycz17W1s3MCwgNjUsIDYwXSwgNTUsIFs1MCwgNDVdLCA0MF19IC8+XG4gICAgICAgIDxDZWxsU3RyaXBGYW5jeSBjZWxsV2lkdGg9ezEwMH0gY2VsbEhlaWdodD17MjV9XG4gICAgICAgICAgY2VsbE51bWJlcnM9e1sxMTAsIDExNiwgNTI1LCA0MV19IC8+XG4gICAgICAgIDxDZWxsU3RyaXBEYXJrIGNlbGxXaWR0aD17WzE4MCwgNTAsIDEwMF19IGNlbGxIZWlnaHQ9ezQwfVxuICAgICAgICAgIGNlbGxOdW1iZXJzPXtbJ0Jyb2tlbicsICdJbicsICdPdXQnXX0gLz5cbiAgICAgICAgPENlbGxTdHJpcFNpbXBsZSBjZWxsV2lkdGg9e1szMCwgNDBdfSBjZWxsSGVpZ2h0PXtbNDAsIFsyMCwgMjBdXX1cbiAgICAgICAgICBjZWxsTnVtYmVycz17WzE1LFsxNiwxN11dfSAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG5cblJlYWN0RE9NLnJlbmRlcig8QXBwIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykpO1xuIl19
